@page "/products"
@using System.Net.Http.Json
@using InventoryAspireSample.Shared.Entity
@inject HttpClient Http

<h3>Products</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (!string.IsNullOrWhiteSpace(error))
{
    <div class="alert alert-danger">@error</div>
}
else if (_products is not null && _products.Count > 0)
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th class="text-end">Price</th>
                <th class="text-end">Stock</th>
                <th>Category</th>
                <th>Created At</th>
                <th>Active</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in _products)
            {
                <tr>
                    <td>@p.Id</td>
                    <td>@p.Name</td>
                    <td>@p.Description</td>
                    <td class="text-end">@p.Price.ToString("0.##")</td>
                    <td class="text-end">@p.Stock</td>
                    <td>@p.Category</td>
                    <td>@p.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                    <td>
                        @if (p.IsActive)
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Inactive</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No products found.</p>
}

@code {
 

    private List<Product>? _products;
    private bool isLoading = true;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _products = await Http.GetFromJsonAsync<List<Product>>("api/Product");
        }
        catch (Exception ex)
        {
            // Minimal error message for display
            error = $"Failed to load products: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
